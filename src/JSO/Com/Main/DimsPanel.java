 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JSO.Com.Main;

import JSO.Com.DataBox.SettingPack;
import JSO.Com.Render.base.DrawSettingDims;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JSpinner;
import javax.swing.JTabbedPane;

/**
 *
 * @author shayan
 */
public class DimsPanel extends javax.swing.JPanel {

    /**
     * Creates new form dims
     */
    ImagePanel imagePanel;
    List<DimPanel> dimPanel;
    List<DimPanelColor> dimPanelColors;
    SettingPack settingPack;
//    SettingInterface setting;
      Settings setting;
//    int cSize,fRes;

    public DimsPanel() {
        initComponents();
        imagePanel = new ImagePanel();
        jPanelPic.add(imagePanel);
        dimPanel = new LinkedList<DimPanel>();
        dimPanel.add(new DimPanel(setting));
        jTabbedPaneDimPanels.add(dimPanel.get(0), "s_1");
        dimPanelColors = new LinkedList<DimPanelColor>();
        dimPanelColors.add(new DimPanelColor(setting));
        jTabbedPaneDimPanels.add(dimPanelColors.get(0), "s_1");
        dimPanelColors = new LinkedList<DimPanelColor>();
        jSpinnerAnimFrame.setVisible(false);
        jPanelspeed.setVisible(false);
//       jComboBoxFonts.setModel(new javax.swing.DefaultComboBoxModel(GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames())); 
        File folder = new File(settingPack.getFontpath());
//        File[] listOfFiles = folder.listFiles();
        String listOfFiles[] = folder.list();
        jComboBoxFonts.setModel(new javax.swing.DefaultComboBoxModel(listOfFiles));

        jComboBoxDimsList.removeAllItems();

    }

    public DimsPanel(SettingPack settingPack, Settings settingInterface) {
        initComponents();
        this.settingPack = settingPack;
        this.setting = settingInterface;
        imagePanel = new ImagePanel();
        jPanelPic.add(imagePanel);
        dimPanel = new LinkedList<DimPanel>();
        dimPanel.add(new DimPanel(setting));
        jTabbedPaneDimPanels.add(dimPanel.get(0), "s_1");
//        jTabbedPaneDimPanels.add(jPanel1);
        jSpinnerAnimFrame.setVisible(false);
        jPanelspeed.setVisible(false);

        File folder = new File(settingPack.getFontpath());
//        File[] listOfFiles = folder.listFiles();
        String listOfFiles[] = folder.list();
        jComboBoxFonts.setModel(new javax.swing.DefaultComboBoxModel(listOfFiles));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTextMArgine = new javax.swing.ButtonGroup();
        buttonGroupTextAlignV = new javax.swing.ButtonGroup();
        buttonGroupFOntStyle = new javax.swing.ButtonGroup();
        buttonGroupLinera = new javax.swing.ButtonGroup();
        buttonGroupLeftToRight = new javax.swing.ButtonGroup();
        buttonGroupimagetextobj = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPaneDimPanels = new javax.swing.JTabbedPane();
        jTabbedPaneDimState = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jCheckBoxVisible = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        nullVis = new javax.swing.JCheckBox();
        jPanel26 = new javax.swing.JPanel();
        TextVisible = new javax.swing.JCheckBox();
        Objectvisible = new javax.swing.JCheckBox();
        ImageVisible = new javax.swing.JCheckBox();
        light = new javax.swing.JCheckBox();
        jPanel15 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jRadioButtonMargineL0 = new javax.swing.JRadioButton();
        jRadioButtonMargineM1 = new javax.swing.JRadioButton();
        jRadioButtonMargineR2 = new javax.swing.JRadioButton();
        jRadioButtonMargineBL = new javax.swing.JRadioButton();
        jRadioButtonMargineBM = new javax.swing.JRadioButton();
        jRadioButtonMargineBR = new javax.swing.JRadioButton();
        jPanel18 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jRadioButtonAlignmV0 = new javax.swing.JRadioButton();
        jRadioButtonAlignmV1 = new javax.swing.JRadioButton();
        jRadioButtonAlignmV2 = new javax.swing.JRadioButton();
        jPanel25 = new javax.swing.JPanel();
        jRadioButtonLefttoright0 = new javax.swing.JRadioButton();
        jRadioButtonLefttoright1 = new javax.swing.JRadioButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jCheckBoxAnimLoop = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jComboBoxDimsList = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jButtonDimsAdd = new javax.swing.JButton();
        jButtonDimsLess = new javax.swing.JButton();
        jComboBoxFonts = new javax.swing.JComboBox();
        jPanel24 = new javax.swing.JPanel();
        jRadioButtonlinear = new javax.swing.JRadioButton();
        jRadioButtonbezier = new javax.swing.JRadioButton();
        jRadioButtonbezier1 = new javax.swing.JRadioButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jCheckBoxAnimated = new javax.swing.JCheckBox();
        jSpinnerAnimFrame = new javax.swing.JSpinner();
        jPanelspeed = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSpinnerSpeed = new javax.swing.JSpinner();
        jPanel14 = new javax.swing.JPanel();
        jCheckBoxSeqLoop = new javax.swing.JCheckBox();
        jSpinnerAnimFrame1 = new javax.swing.JSpinner();
        jPanelPic = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel21 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jSpinnerfontsize = new javax.swing.JSpinner();
        jSpinnerfontSpace = new javax.swing.JSpinner();
        jSpinnerfontresu = new javax.swing.JSpinner();
        jSpinnerfontmaxwide = new javax.swing.JSpinner();
        jPanel19 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBoxFOntBold = new javax.swing.JCheckBox();
        jCheckBoxFontItalic = new javax.swing.JCheckBox();
        jcheckBackText = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(0, 1));
        jPanel1.add(jTabbedPaneDimPanels);
        jPanel1.add(jTabbedPaneDimState);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel11.setLayout(new java.awt.GridLayout(0, 1));

        jPanel5.setLayout(new java.awt.GridLayout(0, 1));

        jPanel7.setLayout(new java.awt.BorderLayout());

        jTextField1.setText("name");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel7.add(jTextField1, java.awt.BorderLayout.CENTER);

        jCheckBoxVisible.setSelected(true);
        jCheckBoxVisible.setText("On");
        jPanel7.add(jCheckBoxVisible, java.awt.BorderLayout.LINE_END);

        jPanel5.add(jPanel7);

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupimagetextobj.add(nullVis);
        nullVis.setText("null");
        nullVis.setActionCommand("0");
        nullVis.setMargin(new java.awt.Insets(0, 0, 0, 0));
        nullVis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nullVisActionPerformed(evt);
            }
        });
        jPanel8.add(nullVis);

        jPanel26.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupimagetextobj.add(TextVisible);
        TextVisible.setText("txt");
        TextVisible.setActionCommand("1");
        TextVisible.setMargin(new java.awt.Insets(0, 0, 0, 0));
        TextVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextVisibleActionPerformed(evt);
            }
        });
        jPanel26.add(TextVisible);

        jPanel8.add(jPanel26);

        buttonGroupimagetextobj.add(Objectvisible);
        Objectvisible.setText("OBJ");
        Objectvisible.setActionCommand("2");
        Objectvisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ObjectvisibleActionPerformed(evt);
            }
        });
        jPanel8.add(Objectvisible);

        buttonGroupimagetextobj.add(ImageVisible);
        ImageVisible.setText("img");
        ImageVisible.setActionCommand("3");
        ImageVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImageVisibleActionPerformed(evt);
            }
        });
        jPanel8.add(ImageVisible);

        buttonGroupimagetextobj.add(light);
        light.setText("lgt");
        light.setActionCommand("4");
        light.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightActionPerformed(evt);
            }
        });
        jPanel8.add(light);

        jPanel5.add(jPanel8);

        jPanel15.setLayout(new java.awt.GridLayout(1, 0));

        jPanel17.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupTextMArgine.add(jRadioButtonMargineL0);
        jRadioButtonMargineL0.setText("left");
        jRadioButtonMargineL0.setActionCommand("0");
        jRadioButtonMargineL0.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel17.add(jRadioButtonMargineL0);

        buttonGroupTextMArgine.add(jRadioButtonMargineM1);
        jRadioButtonMargineM1.setSelected(true);
        jRadioButtonMargineM1.setText("m");
        jRadioButtonMargineM1.setActionCommand("1");
        jRadioButtonMargineM1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel17.add(jRadioButtonMargineM1);

        buttonGroupTextMArgine.add(jRadioButtonMargineR2);
        jRadioButtonMargineR2.setText("R");
        jRadioButtonMargineR2.setActionCommand("2");
        jRadioButtonMargineR2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel17.add(jRadioButtonMargineR2);

        buttonGroupTextMArgine.add(jRadioButtonMargineBL);
        jRadioButtonMargineBL.setText("BL");
        jRadioButtonMargineBL.setActionCommand("3");
        jRadioButtonMargineBL.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel17.add(jRadioButtonMargineBL);

        buttonGroupTextMArgine.add(jRadioButtonMargineBM);
        jRadioButtonMargineBM.setText("BM");
        jRadioButtonMargineBM.setActionCommand("4");
        jRadioButtonMargineBM.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel17.add(jRadioButtonMargineBM);

        buttonGroupTextMArgine.add(jRadioButtonMargineBR);
        jRadioButtonMargineBR.setText("BR");
        jRadioButtonMargineBR.setActionCommand("5");
        jRadioButtonMargineBR.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel17.add(jRadioButtonMargineBR);

        jPanel15.add(jPanel17);

        jPanel5.add(jPanel15);

        jPanel18.setLayout(new java.awt.GridLayout(1, 0));

        jPanel27.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupTextAlignV.add(jRadioButtonAlignmV0);
        jRadioButtonAlignmV0.setText("top");
        jRadioButtonAlignmV0.setActionCommand("0");
        jRadioButtonAlignmV0.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel27.add(jRadioButtonAlignmV0);

        buttonGroupTextAlignV.add(jRadioButtonAlignmV1);
        jRadioButtonAlignmV1.setSelected(true);
        jRadioButtonAlignmV1.setText("C");
        jRadioButtonAlignmV1.setActionCommand("1");
        jRadioButtonAlignmV1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel27.add(jRadioButtonAlignmV1);

        buttonGroupTextAlignV.add(jRadioButtonAlignmV2);
        jRadioButtonAlignmV2.setText("B");
        jRadioButtonAlignmV2.setActionCommand("2");
        jRadioButtonAlignmV2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel27.add(jRadioButtonAlignmV2);

        jPanel18.add(jPanel27);

        jPanel25.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupLeftToRight.add(jRadioButtonLefttoright0);
        jRadioButtonLefttoright0.setText("L2R>");
        jRadioButtonLefttoright0.setActionCommand("0");
        jPanel25.add(jRadioButtonLefttoright0);

        buttonGroupLeftToRight.add(jRadioButtonLefttoright1);
        jRadioButtonLefttoright1.setSelected(true);
        jRadioButtonLefttoright1.setText("<R2L");
        jRadioButtonLefttoright1.setActionCommand("1");
        jRadioButtonLefttoright1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRadioButtonLefttoright1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel25.add(jRadioButtonLefttoright1);

        jPanel18.add(jPanel25);

        jPanel5.add(jPanel18);

        jPanel11.add(jPanel5);

        jPanel13.setLayout(new java.awt.GridLayout(0, 1));

        jPanel9.setLayout(new java.awt.GridLayout(1, 0));

        jLabel2.setText("keyframe");
        jPanel9.add(jLabel2);

        jButton2.setText("+");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton2);

        jButton3.setText("-");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton3);

        jCheckBoxAnimLoop.setText("Loop");
        jCheckBoxAnimLoop.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxAnimLoop.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxAnimLoopStateChanged(evt);
            }
        });
        jCheckBoxAnimLoop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAnimLoopActionPerformed(evt);
            }
        });
        jPanel9.add(jCheckBoxAnimLoop);

        jPanel13.add(jPanel9);

        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jComboBoxDimsList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxDimsList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDimsListActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBoxDimsList);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        jButtonDimsAdd.setText("+");
        jButtonDimsAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDimsAddActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonDimsAdd);

        jButtonDimsLess.setText("-");
        jButtonDimsLess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDimsLessActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonDimsLess);

        jPanel2.add(jPanel4);

        jPanel6.add(jPanel2);

        jPanel13.add(jPanel6);

        jComboBoxFonts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxFontsMouseClicked(evt);
            }
        });
        jComboBoxFonts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFontsActionPerformed(evt);
            }
        });
        jComboBoxFonts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxFontsKeyPressed(evt);
            }
        });
        jPanel13.add(jComboBoxFonts);

        jPanel24.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupLinera.add(jRadioButtonlinear);
        jRadioButtonlinear.setText("linear");
        jRadioButtonlinear.setActionCommand("0");
        jPanel24.add(jRadioButtonlinear);

        buttonGroupLinera.add(jRadioButtonbezier);
        jRadioButtonbezier.setText("bezier");
        jRadioButtonbezier.setActionCommand("1");
        jPanel24.add(jRadioButtonbezier);

        buttonGroupLinera.add(jRadioButtonbezier1);
        jRadioButtonbezier1.setSelected(true);
        jRadioButtonbezier1.setText("bezier2");
        jRadioButtonbezier1.setActionCommand("2");
        jPanel24.add(jRadioButtonbezier1);

        jPanel13.add(jPanel24);

        jPanel11.add(jPanel13);

        jPanel12.setMinimumSize(new java.awt.Dimension(110, 110));
        jPanel12.setLayout(new java.awt.GridLayout(0, 1));

        jPanel20.setLayout(new java.awt.GridLayout(1, 0));

        jPanel16.setLayout(new java.awt.GridLayout(0, 1));

        jPanel10.setLayout(new java.awt.GridLayout(1, 0));

        jCheckBoxAnimated.setText("seq");
        jCheckBoxAnimated.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxAnimated.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxAnimatedStateChanged(evt);
            }
        });
        jCheckBoxAnimated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAnimatedActionPerformed(evt);
            }
        });
        jPanel10.add(jCheckBoxAnimated);
        jPanel10.add(jSpinnerAnimFrame);

        jPanel16.add(jPanel10);

        jPanelspeed.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setText("speed");
        jPanelspeed.add(jLabel1);

        jSpinnerSpeed.setModel(new javax.swing.SpinnerNumberModel(100, null, null, 1));
        jSpinnerSpeed.setValue(100);
        jPanelspeed.add(jSpinnerSpeed);

        jPanel16.add(jPanelspeed);

        jPanel14.setLayout(new java.awt.GridLayout(1, 0));

        jCheckBoxSeqLoop.setText("seqLoop");
        jCheckBoxSeqLoop.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxSeqLoop.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxSeqLoopStateChanged(evt);
            }
        });
        jCheckBoxSeqLoop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSeqLoopActionPerformed(evt);
            }
        });
        jPanel14.add(jCheckBoxSeqLoop);
        jPanel14.add(jSpinnerAnimFrame1);

        jPanel16.add(jPanel14);

        jPanel20.add(jPanel16);

        jPanelPic.setBackground(new java.awt.Color(0, 0, 0));
        jPanelPic.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanelPic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelPicMouseClicked(evt);
            }
        });
        jPanelPic.setLayout(new java.awt.GridLayout(1, 0));
        jPanel20.add(jPanelPic);

        jPanel12.add(jPanel20);

        jPanel30.setLayout(new java.awt.GridLayout(1, 0));

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(2);
        jTextArea1.setMaximumSize(new java.awt.Dimension(25, 22));
        jTextArea1.setMinimumSize(new java.awt.Dimension(24, 22));
        jTextArea1.setPreferredSize(new java.awt.Dimension(25, 94));
        jPanel30.add(jTextArea1);

        jPanel12.add(jPanel30);

        jPanel11.add(jPanel12);

        jPanel21.setLayout(new java.awt.GridLayout(0, 1));

        jPanel29.setLayout(new java.awt.GridLayout(1, 0));

        jButton6.setText("copy");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel29.add(jButton6);

        jButton7.setText("paste");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel29.add(jButton7);

        jPanel21.add(jPanel29);

        jPanel22.setLayout(new java.awt.GridLayout(1, 0));

        jButton1.setText("del");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel22.add(jButton1);

        jButton4.setText("add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel22.add(jButton4);

        jButton5.setText("dup");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel22.add(jButton5);

        jPanel21.add(jPanel22);

        jPanel28.setLayout(new java.awt.GridLayout(1, 0));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("font size");
        jPanel28.add(jLabel3);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("space");
        jPanel28.add(jLabel6);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("resulation");
        jPanel28.add(jLabel4);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("max wide");
        jPanel28.add(jLabel5);

        jPanel21.add(jPanel28);

        jPanel23.setLayout(new java.awt.GridLayout(1, 0));

        jSpinnerfontsize.setModel(new javax.swing.SpinnerNumberModel(20, null, null, 1));
        jSpinnerfontsize.setValue(100);
        jSpinnerfontsize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerfontsizeStateChanged(evt);
            }
        });
        jPanel23.add(jSpinnerfontsize);

        jSpinnerfontSpace.setModel(new javax.swing.SpinnerNumberModel(20, null, null, 1));
        jSpinnerfontSpace.setValue(100);
        jSpinnerfontSpace.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerfontSpaceStateChanged(evt);
            }
        });
        jPanel23.add(jSpinnerfontSpace);

        jSpinnerfontresu.setModel(new javax.swing.SpinnerNumberModel(20, null, null, 1));
        jSpinnerfontresu.setValue(100);
        jSpinnerfontresu.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerfontresuStateChanged(evt);
            }
        });
        jPanel23.add(jSpinnerfontresu);

        jSpinnerfontmaxwide.setModel(new javax.swing.SpinnerNumberModel(20, null, null, 1));
        jSpinnerfontmaxwide.setValue(100);
        jSpinnerfontmaxwide.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerfontmaxwideStateChanged(evt);
            }
        });
        jPanel23.add(jSpinnerfontmaxwide);

        jPanel21.add(jPanel23);

        jPanel19.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupFOntStyle.add(jCheckBox1);
        jCheckBox1.setText("Plain");
        jPanel19.add(jCheckBox1);

        buttonGroupFOntStyle.add(jCheckBoxFOntBold);
        jCheckBoxFOntBold.setText("BOLD");
        jCheckBoxFOntBold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFOntBoldActionPerformed(evt);
            }
        });
        jPanel19.add(jCheckBoxFOntBold);

        buttonGroupFOntStyle.add(jCheckBoxFontItalic);
        jCheckBoxFontItalic.setText("ITALIC");
        jCheckBoxFontItalic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFontItalicActionPerformed(evt);
            }
        });
        jPanel19.add(jCheckBoxFontItalic);

        jcheckBackText.setText("Bac");
        jcheckBackText.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jcheckBackText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcheckBackTextActionPerformed(evt);
            }
        });
        jPanel19.add(jcheckBackText);

        jPanel21.add(jPanel19);

        jPanel11.add(jPanel21);

        add(jPanel11, java.awt.BorderLayout.WEST);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void ImageVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImageVisibleActionPerformed
        // TODO add your handling code here:
        if (setting.isNewsha()) {
            setting.dimupdateSetting();
        }
    }//GEN-LAST:event_ImageVisibleActionPerformed

    private void TextVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextVisibleActionPerformed
        // TODO add your handling code here:
        if (setting.isNewsha()) {
            setting.dimupdateSetting();
        }
    }//GEN-LAST:event_TextVisibleActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        int x = jTabbedPaneDimPanels.getSelectedIndex();
//        System.out.println("dimpanel="+dimPanel.size());
        dimPanel.add(x + 1, new DimPanel(setting));

        dimPanel.get(x + 1).setNewsha(false);

        float y[] = dimPanel.get(x).getdims();
        dimPanel.get(x + 1).setdims(y);
        dimPanel.get(x + 1).setOpacity(dimPanel.get(x).getOpacity());
        dimPanel.get(x + 1).setColor(dimPanel.get(x).getColor1());
        dimPanel.get(x + 1).setStrokColor1(dimPanel.get(x).getStrokColor1());
        dimPanel.get(x + 1).setFrame(dimPanel.get(x).getFrame());
        jTabbedPaneDimPanels.removeAll();
        for (int i = 0; i < dimPanel.size(); i++) {
            jTabbedPaneDimPanels.add("S_" + (i + 1), dimPanel.get(i));
        }
        jTabbedPaneDimPanels.setSelectedIndex(x + 1);
        dimPanel.get(x + 1).setNewsha(true);
        setting.dimupdateSetting();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int x = jTabbedPaneDimPanels.getSelectedIndex();
        if (dimPanel.size() > 1) {
            jTabbedPaneDimPanels.remove(x);
            dimPanel.remove(x);
            for (int i = x; i < dimPanel.size(); i++) {
                jTabbedPaneDimPanels.setTitleAt(i, "State" + (i + 1));
            }
            setting.dimupdateSetting();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBoxAnimatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAnimatedActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBoxAnimatedActionPerformed

    private void jCheckBoxAnimatedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxAnimatedStateChanged
        // TODO add your handling code here:
        if (jCheckBoxAnimated.isSelected()) {
            jSpinnerAnimFrame.setVisible(true);
            jPanelspeed.setVisible(true);
        } else {
            jSpinnerAnimFrame.setVisible(false);
            jPanelspeed.setVisible(false);
        }
//            jSpinnerAnimFrame.setValue(0);
    }//GEN-LAST:event_jCheckBoxAnimatedStateChanged

    private void jComboBoxDimsListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDimsListActionPerformed
        // TODO add your handling code here:
        if (setting.isNewsha()) {
            setting.dimScomboReSelect(jComboBoxDimsList.getSelectedIndex(), jTabbedPaneDimPanels.getSelectedIndex());
        }
    }//GEN-LAST:event_jComboBoxDimsListActionPerformed

    private void jButtonDimsAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDimsAddActionPerformed
        // TODO add your handling code here:
        int x = (jComboBoxDimsList.getSelectedIndex());
        setting.dimSadd(x, jTabbedPaneDimPanels.getSelectedIndex());

        jComboBoxDimsList.setSelectedIndex(x + 1);
    }//GEN-LAST:event_jButtonDimsAddActionPerformed

    private void jButtonDimsLessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDimsLessActionPerformed
        // TODO add your handling code here:

        int x = jComboBoxDimsList.getSelectedIndex();
        if (setting.dimLess(x))
//        if (x > 0) {
            x = x - 1;
//        }
      if(x<jComboBoxDimsList.getItemCount())  jComboBoxDimsList.setSelectedIndex(x);
    }//GEN-LAST:event_jButtonDimsLessActionPerformed

    private void jCheckBoxSeqLoopStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxSeqLoopStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxSeqLoopStateChanged

    private void jCheckBoxSeqLoopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSeqLoopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxSeqLoopActionPerformed

    private void jPanelPicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelPicMouseClicked
        // TODO add your handling code here:
        choosePic();

    }//GEN-LAST:event_jPanelPicMouseClicked

    private void jComboBoxFontsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxFontsMouseClicked
        // TODO add your handling code here:
//        settingupdate();
    }//GEN-LAST:event_jComboBoxFontsMouseClicked

    private void jComboBoxFontsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxFontsKeyPressed
        // TODO add your handling code here:
//        settingupdate();
    }//GEN-LAST:event_jComboBoxFontsKeyPressed

    private void jComboBoxFontsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFontsActionPerformed
        // TODO add your handling code here:
        if (setting.isNewsha()) {
            setting.dimupdateSetting();
        }
    }//GEN-LAST:event_jComboBoxFontsActionPerformed

    private void jCheckBoxFOntBoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFOntBoldActionPerformed
        // TODO add your handling code here:
        setting.dimupdateSetting();
    }//GEN-LAST:event_jCheckBoxFOntBoldActionPerformed

    private void jCheckBoxFontItalicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFontItalicActionPerformed
        // TODO add your handling code here:
        setting.dimupdateSetting();
    }//GEN-LAST:event_jCheckBoxFontItalicActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        setting.Itemcopy(this);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        setting.ItemPaste();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setting.ItemDelete();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setting.ItemAdd();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        setting.ItemDup();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jSpinnerfontsizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerfontsizeStateChanged
        // TODO add your handling code here:
        if (setting.isNewsha()) {
            setting.dimupdateSetting();
        }
    }//GEN-LAST:event_jSpinnerfontsizeStateChanged

    private void jSpinnerfontresuStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerfontresuStateChanged
        // TODO add your handling code here:
        if (setting.isNewsha()) {
            setting.dimupdateSetting();
        }
    }//GEN-LAST:event_jSpinnerfontresuStateChanged

    private void jcheckBackTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcheckBackTextActionPerformed
        // TODO add your handling code here:
        if (setting.isNewsha()) {
            setting.dimupdateSetting();
        }
    }//GEN-LAST:event_jcheckBackTextActionPerformed

    private void jCheckBoxAnimLoopStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxAnimLoopStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxAnimLoopStateChanged

    private void jCheckBoxAnimLoopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAnimLoopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxAnimLoopActionPerformed

    private void jSpinnerfontmaxwideStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerfontmaxwideStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerfontmaxwideStateChanged

    private void ObjectvisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ObjectvisibleActionPerformed
   if (setting.isNewsha()) {
            setting.dimupdateSetting();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ObjectvisibleActionPerformed

    private void nullVisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nullVisActionPerformed
   if (setting.isNewsha()) {
            setting.dimupdateSetting();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_nullVisActionPerformed

    private void lightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lightActionPerformed
   if (setting.isNewsha()) {
            setting.dimupdateSetting();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_lightActionPerformed

    private void jSpinnerfontSpaceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerfontSpaceStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerfontSpaceStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ImageVisible;
    private javax.swing.JCheckBox Objectvisible;
    private javax.swing.JCheckBox TextVisible;
    private javax.swing.ButtonGroup buttonGroupFOntStyle;
    private javax.swing.ButtonGroup buttonGroupLeftToRight;
    private javax.swing.ButtonGroup buttonGroupLinera;
    private javax.swing.ButtonGroup buttonGroupTextAlignV;
    private javax.swing.ButtonGroup buttonGroupTextMArgine;
    private javax.swing.ButtonGroup buttonGroupimagetextobj;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButtonDimsAdd;
    private javax.swing.JButton jButtonDimsLess;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBoxAnimLoop;
    private javax.swing.JCheckBox jCheckBoxAnimated;
    private javax.swing.JCheckBox jCheckBoxFOntBold;
    private javax.swing.JCheckBox jCheckBoxFontItalic;
    private javax.swing.JCheckBox jCheckBoxSeqLoop;
    private javax.swing.JCheckBox jCheckBoxVisible;
    private javax.swing.JComboBox jComboBoxDimsList;
    private javax.swing.JComboBox jComboBoxFonts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelPic;
    private javax.swing.JPanel jPanelspeed;
    private javax.swing.JRadioButton jRadioButtonAlignmV0;
    private javax.swing.JRadioButton jRadioButtonAlignmV1;
    private javax.swing.JRadioButton jRadioButtonAlignmV2;
    private javax.swing.JRadioButton jRadioButtonLefttoright0;
    private javax.swing.JRadioButton jRadioButtonLefttoright1;
    private javax.swing.JRadioButton jRadioButtonMargineBL;
    private javax.swing.JRadioButton jRadioButtonMargineBM;
    private javax.swing.JRadioButton jRadioButtonMargineBR;
    private javax.swing.JRadioButton jRadioButtonMargineL0;
    private javax.swing.JRadioButton jRadioButtonMargineM1;
    private javax.swing.JRadioButton jRadioButtonMargineR2;
    private javax.swing.JRadioButton jRadioButtonbezier;
    private javax.swing.JRadioButton jRadioButtonbezier1;
    private javax.swing.JRadioButton jRadioButtonlinear;
    private javax.swing.JSpinner jSpinnerAnimFrame;
    private javax.swing.JSpinner jSpinnerAnimFrame1;
    private javax.swing.JSpinner jSpinnerSpeed;
    private javax.swing.JSpinner jSpinnerfontSpace;
    private javax.swing.JSpinner jSpinnerfontmaxwide;
    private javax.swing.JSpinner jSpinnerfontresu;
    private javax.swing.JSpinner jSpinnerfontsize;
    private javax.swing.JTabbedPane jTabbedPaneDimPanels;
    private javax.swing.JTabbedPane jTabbedPaneDimState;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JCheckBox jcheckBackText;
    private javax.swing.JCheckBox light;
    private javax.swing.JCheckBox nullVis;
    // End of variables declaration//GEN-END:variables

    public void setSettingPack(SettingPack settingPack) {
        this.settingPack = settingPack;
    }

//    public boolean isImageVisible() {
//        return ImageVisible.isSelected();
//    }
//
//    public void setImageVisible(boolean visible) {
//        ImageVisible.setSelected(visible);
//    }
//
//    public boolean isTextVisible() {
//        return TextVisible.isSelected();
//    }
//
//    public void setTextVisible(boolean visible) {
//        TextVisible.setSelected(visible);
//    }

    public String getTextField1() {
        return jTextField1.getText();
    }

    public void setTextField1(String st) {
        jTextField1.setText(st);
    }

    private void dimupdtae() {

    }

    public List<DimPanel> getDimPanel() {
        return dimPanel;
    }

    public int indexdimpanels() {
        return (jTabbedPaneDimPanels.getSelectedIndex());
    }

    public void setDimPanel(int x) {
        jTabbedPaneDimPanels.removeAll();
        this.dimPanel = new LinkedList<DimPanel>();
        for (int i = 0; i < x; i++) {
            dimPanel.add(new DimPanel(setting));
            jTabbedPaneDimPanels.add(dimPanel.get(i), "state" + (i + 1));
        }
    }

    public void jTabbedPaneReset() {
        jTabbedPaneDimPanels.removeAll();
        for (int i = 0; i < dimPanel.size(); i++) {
            jTabbedPaneDimPanels.add(dimPanel.get(i), "state" + (i + 1));
        }
    }

    public void setTextVisible(JCheckBox TextVisible) {
        this.TextVisible = TextVisible;
    }

    public boolean isanimating() {
        return jCheckBoxAnimated.isSelected();
    }

    public void setAnimating(boolean bool) {
        jCheckBoxAnimated.setSelected(bool);
    }

    public boolean isSeqLoop() {
        return jCheckBoxSeqLoop.isSelected();
    }

    public void setSeqLoop(boolean bool) {
        jCheckBoxSeqLoop.setSelected(bool);
    }

    public int getAnimFrame() {
        if (jCheckBoxAnimated.isSelected()) {
            return Integer.parseInt(jSpinnerAnimFrame.getValue().toString());
        } else {
            return 0;
        }
    }

    public void setAnimFrame(int frame) {
        this.jSpinnerAnimFrame.setValue(frame);
    }

    public int getAnimRate() {
        if (jCheckBoxAnimated.isSelected()) {
            return (int) (jSpinnerSpeed.getValue());
        } else {
            return 0;
        }

    }

    public void setAnimRate(int speedRate) {
        jSpinnerSpeed.setValue(speedRate);
    }

    public String getImage() {
        return imagePanel.getAddress();
    }

    public void setImage(String imagePanel) {
        this.imagePanel.setAddress(imagePanel);
    }

    void redrawImage() {
        imagePanel.reloadImage();
    }

    void setcombo(List<DrawSettingDims[]> drawingDimsList) {
        boolean b = setting.isNewsha();
        setting.setNewsha(false);
        jComboBoxDimsList.removeAllItems();
        for (int i = 0; i < drawingDimsList.size(); i++) {
            jComboBoxDimsList.addItem(" " + i + " ");
        }
        setting.setNewsha(b);
        jComboBoxDimsList.setSelectedIndex(0);
    }

    int getActiveDimState() {
        return jTabbedPaneDimPanels.getSelectedIndex();
    }

    int getAlignH() {
        int x = 1;
        x = Integer.parseInt(buttonGroupTextMArgine.getSelection().getActionCommand());
        return x;
    }

    int getAlignV() {
        int x = 1;
        x = Integer.parseInt(buttonGroupTextAlignV.getSelection().getActionCommand());
        return x;
    }

    int getAlign_Lefttoright() {
        int x = 1;
        x = Integer.parseInt(buttonGroupLeftToRight.getSelection().getActionCommand());
        return x;
    }

    void setAlign(int AlignH, int AlignV, int lefttoright) {
        switch (AlignH) {
            case 0:
                jRadioButtonMargineL0.setSelected(true);
                break;
            case 1:
                jRadioButtonMargineM1.setSelected(true);
                break;
            case 2:
                jRadioButtonMargineR2.setSelected(true);
                break;
            case 3:
                jRadioButtonMargineBL.setSelected(true);
                break;
            case 4:
                jRadioButtonMargineBM.setSelected(true);
                break;
            case 5:
                jRadioButtonMargineBR.setSelected(true);
                break;
            default:
                jRadioButtonMargineM1.setSelected(true);
                break;

        }
        switch (AlignV) {
            case 0:
                jRadioButtonAlignmV0.setSelected(true);
                break;
            case 1:
                jRadioButtonAlignmV1.setSelected(true);
                break;
            case 2:
                jRadioButtonAlignmV2.setSelected(true);
                break;
            default:
                jRadioButtonAlignmV1.setSelected(true);
                break;

        }
        switch (lefttoright) {
            case 0:
                jRadioButtonLefttoright0.setSelected(true);
                break;
            case 1:
                jRadioButtonLefttoright1.setSelected(true);
                break;
        }

    }

    private String choosePic() {
        java.awt.FileDialog fd = new java.awt.FileDialog(new JFrame("انتخاب عکس"), "انتخاب تصاویر", java.awt.FileDialog.LOAD);
//fd.setMultipleMode(true);
        fd.setDirectory(settingPack.getPath());
        fd.setVisible(true);

        if (fd.getFile() == null) {
            return "";
        } else {
            File files = fd.getFiles()[0];
            imagePanel.drawImage(files);
            settingPack.setPath(files.getPath());
            jTextArea1.setText(files.getAbsolutePath());
            return files.getAbsolutePath();
        }

    }

    String getFont2() {
        return jComboBoxFonts.getSelectedItem().toString();
    }

    void setFont2(String font2) {
        boolean b = setting.isNewsha();
        setting.setNewsha(false);
        // System.out.println("980221- font2=" + font2);
        jComboBoxFonts.setSelectedIndex(0);
        jComboBoxFonts.setSelectedItem(font2);
        setting.setNewsha(b);
    }

    boolean isfontBold() {
        return jCheckBoxFOntBold.isSelected();
    }

    boolean isfontItalic() {
        return jCheckBoxFontItalic.isSelected();
    }

    void setfontBold(boolean bold) {
        jCheckBoxFOntBold.setSelected(bold);
    }

    void setfontItalic(boolean italic) {
        jCheckBoxFontItalic.setSelected(italic);
    }

    void setfontPLain(boolean b) {
        jCheckBox1.setSelected(b);
    }

    public int getcSize() {
        return (int) jSpinnerfontsize.getValue();
    }

    public void setcSize(int cSize) {
        jSpinnerfontsize.setValue(cSize);
    }

    public int getfRes() {
        return (int) jSpinnerfontresu.getValue();
    }

    public void setfRes(int fRes) {
        jSpinnerfontresu.setValue(fRes);
    }

    public int getFmaxwide() {
        return (int) jSpinnerfontmaxwide.getValue();
    }

    public void setFmaxwide(int maxwide) {
        jSpinnerfontmaxwide.setValue(maxwide);
    }
    
     public int getfSpacing() {
        return (int) jSpinnerfontSpace.getValue();
    }

    public void setfSpacing(int fspace) {
        jSpinnerfontSpace.setValue(fspace);
    }

    public boolean isTextbackvisible() {
        return jcheckBackText.isSelected();
    }

    public void setTextbackvisible(boolean vis) {
        jcheckBackText.setSelected(vis);
    }

    public boolean isAnLoop() {
        return jCheckBoxAnimLoop.isSelected();
    }

    public void setAnLoop(boolean vis) {
        jCheckBoxAnimLoop.setSelected(vis);
    }

    void setbeZierorLinear(int in) {
        switch (in) {
            case 0:
                jRadioButtonlinear.setSelected(true);
                break;
            case 1:
                jRadioButtonbezier.setSelected(true);
                break;
            case 2:
                jRadioButtonbezier1.setSelected(true);
                break;
            default:
                break;
        }
    }

    int getbeZierorLinear() {
        int x = 0;
        x = Integer.parseInt(buttonGroupLinera.getSelection().getActionCommand());
        return x;
    }

    public String getObject() {
        return jTextArea1.getText();
    }

    public void setObject(String text) {
        jTextArea1.setText(text);
    }
    int getito(){
        int x=0;
        try{
            x = Integer.parseInt(buttonGroupimagetextobj.getSelection().getActionCommand());
        }catch(NumberFormatException e){
            x=0;
        }
        return x;
    }
    void setIto(int item){
        switch (item){
            case 0:
                nullVis.setSelected(true);
                break;
                case 1:
                TextVisible.setSelected(true);
                break;
                case 2:
                Objectvisible.setSelected(true);
                break;
                  case 3:
                ImageVisible.setSelected(true);
                break;
                 case 4:
                light.setSelected(true);
                break;
        }
    }

    int getAlign() {
      return (getAlign_Lefttoright() * 100 + getAlignH() * 3 + getAlignV());
    }

    int getactiveDimIndex() {
     return  jComboBoxDimsList.getSelectedIndex();
    }
    
    public boolean IsVisible(){
       return jCheckBoxVisible.isSelected();
    }
    public void setVisible(boolean vis){
        jCheckBoxVisible.setSelected(vis);
    }
    
    
}
