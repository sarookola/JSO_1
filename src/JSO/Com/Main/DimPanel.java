/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JSO.Com.Main;

import java.awt.Color;
import javax.swing.JColorChooser;

/**
 *
 * @author shayan
 */
public class DimPanel extends javax.swing.JPanel {

    /**
     * Creates new form DimPanel
     */
    SettingInterface settingInterface;
    boolean newsha;

    public DimPanel(SettingInterface settingInterface) {
        this.settingInterface = settingInterface;
        initComponents();
        newsha = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelState1 = new javax.swing.JPanel();
        jSpinnerx = new javax.swing.JSpinner();
        jSpinnerz = new javax.swing.JSpinner();
        jSpinnerScalez = new javax.swing.JSpinner();
        jSpinnerScalex = new javax.swing.JSpinner();
        jButtonColor1 = new javax.swing.JButton();
        jButtonStrokColor1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerFrame = new javax.swing.JSpinner();
        jSliderOpac = new javax.swing.JSlider();
        jSpinnerAnglez = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jSpinnery = new javax.swing.JSpinner();
        jSpinnerScaley = new javax.swing.JSpinner();
        jSpinnerAnglex = new javax.swing.JSpinner();
        jSpinnerAngley = new javax.swing.JSpinner();
        jSpinner1 = new javax.swing.JSpinner();

        setLayout(new java.awt.GridLayout(1, 0));

        jPanelState1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSpinnerx.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 0.1f));
        jSpinnerx.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerxStateChanged(evt);
            }
        });
        jPanelState1.add(jSpinnerx, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 75, -1));

        jSpinnerz.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 0.1f));
        jSpinnerz.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerzStateChanged(evt);
            }
        });
        jPanelState1.add(jSpinnerz, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 75, -1));

        jSpinnerScalez.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 0.1f));
        jSpinnerScalez.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerScalezStateChanged(evt);
            }
        });
        jPanelState1.add(jSpinnerScalez, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 70, -1));

        jSpinnerScalex.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 0.1f));
        jSpinnerScalex.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerScalexStateChanged(evt);
            }
        });
        jPanelState1.add(jSpinnerScalex, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 70, -1));

        jButtonColor1.setText("Color");
        jButtonColor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonColor1ActionPerformed(evt);
            }
        });
        jPanelState1.add(jButtonColor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 75, -1));

        jButtonStrokColor1.setText("Strok Col");
        jButtonStrokColor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStrokColor1ActionPerformed(evt);
            }
        });
        jPanelState1.add(jButtonStrokColor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, -1, -1));

        jLabel2.setText("Opac");
        jPanelState1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 30, 20));

        jLabel1.setText("Position");
        jPanelState1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        jLabel3.setText("Angle");
        jPanelState1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, -1));

        jLabel4.setText("motion_f");
        jPanelState1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));

        jSpinnerFrame.setRequestFocusEnabled(false);
        jSpinnerFrame.setValue(15);
        jPanelState1.add(jSpinnerFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, 80, -1));

        jSliderOpac.setMaximum(255);
        jSliderOpac.setValue(255);
        jSliderOpac.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderOpacStateChanged(evt);
            }
        });
        jPanelState1.add(jSliderOpac, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 150, -1));

        jSpinnerAnglez.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 0.1f));
        jSpinnerAnglez.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerAnglezStateChanged(evt);
            }
        });
        jPanelState1.add(jSpinnerAnglez, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 60, -1));

        jLabel6.setText("scale");
        jPanelState1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 50, 30, -1));

        jSpinnery.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 0.1f));
        jSpinnery.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinneryStateChanged(evt);
            }
        });
        jPanelState1.add(jSpinnery, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 75, -1));

        jSpinnerScaley.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 0.1f));
        jSpinnerScaley.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerScaleyStateChanged(evt);
            }
        });
        jPanelState1.add(jSpinnerScaley, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 70, -1));

        jSpinnerAnglex.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 0.1f));
        jSpinnerAnglex.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerAnglexStateChanged(evt);
            }
        });
        jPanelState1.add(jSpinnerAnglex, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 60, -1));

        jSpinnerAngley.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 0.1f));
        jSpinnerAngley.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerAngleyStateChanged(evt);
            }
        });
        jPanelState1.add(jSpinnerAngley, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 60, -1));
        jPanelState1.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 60, 20));

        add(jPanelState1);
    }// </editor-fold>//GEN-END:initComponents

    private void jSpinnerxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerxStateChanged
        // TODO add your handling cod here:
        updatetop();
    }//GEN-LAST:event_jSpinnerxStateChanged

    private void jSpinnerzStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerzStateChanged
        // TODO add your handling code here:
        updatetop();
    }//GEN-LAST:event_jSpinnerzStateChanged

    private void jSpinnerScalezStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerScalezStateChanged
        // TODO add your handling code here:
        updatetop();
    }//GEN-LAST:event_jSpinnerScalezStateChanged

    private void jSpinnerScalexStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerScalexStateChanged
        // TODO add your handling code here:
        updatetop();
    }//GEN-LAST:event_jSpinnerScalexStateChanged

    private void jButtonColor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonColor1ActionPerformed
        // TODO add your handling code here:
        Color c = JColorChooser.showDialog(null, "Choose a Color", jButtonColor1.getForeground());
        if (c != null) {
            jButtonColor1.setForeground(c);
            updatetop();
        }
    }//GEN-LAST:event_jButtonColor1ActionPerformed

    private void jButtonStrokColor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStrokColor1ActionPerformed
        // TODO add your handling code here:
        Color c = JColorChooser.showDialog(null, "Choose a Color", jButtonStrokColor1.getForeground());
        if (c != null) {
            jButtonStrokColor1.setForeground(c);
            updatetop();
        }
    }//GEN-LAST:event_jButtonStrokColor1ActionPerformed

    private void jSliderOpacStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderOpacStateChanged
        // TODO add your handling code here:
        updatetop();

    }//GEN-LAST:event_jSliderOpacStateChanged

    private void jSpinneryStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinneryStateChanged
        // TODO add your handling code here:
           updatetop();
    }//GEN-LAST:event_jSpinneryStateChanged

    private void jSpinnerScaleyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerScaleyStateChanged
        // TODO add your handling code here:
          updatetop();
    }//GEN-LAST:event_jSpinnerScaleyStateChanged

    private void jSpinnerAnglexStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerAnglexStateChanged
        // TODO add your handling code here:
        updatetop();
    }//GEN-LAST:event_jSpinnerAnglexStateChanged

    private void jSpinnerAngleyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerAngleyStateChanged
        // TODO add your handling code here:
        updatetop();
    }//GEN-LAST:event_jSpinnerAngleyStateChanged

    private void jSpinnerAnglezStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerAnglezStateChanged
        // TODO add your handling code here:
        updatetop();
    }//GEN-LAST:event_jSpinnerAnglezStateChanged
    public float[] getdims() {
        float[] x = new float[9];
        x[0] = (float) jSpinnerx.getValue();
        x[1] = (float)(jSpinnery.getValue() );
        x[2] = (float)(jSpinnerz.getValue() );
        x[3] = (float)(jSpinnerScalex.getValue() );
        x[4] = (float)(jSpinnerScaley.getValue() );
        x[5] = (float)(jSpinnerScalez.getValue() );
        x[6] = (float)(jSpinnerAnglex.getValue() );
        x[7] = (float)(jSpinnerAngley.getValue() );
        x[8] = (float)(jSpinnerAnglez.getValue() );
        return x;
    }



    public void setdims(float x[]) {
        jSpinnerx.setValue(x[0]);
        jSpinnery.setValue(x[1]);
         jSpinnerz.setValue(x[2]);
        jSpinnerScalex.setValue(x[3]);
        jSpinnerScaley.setValue(x[4]);
        jSpinnerScalez.setValue(x[5]);
         jSpinnerAnglex.setValue(x[6]);
           jSpinnerAngley.setValue(x[7]);
             jSpinnerAnglez.setValue(x[8]);
             

    }

    public Color getColor1() {
        return jButtonColor1.getForeground();
    }

    public void setColor(Color jButtonColor1) {
        this.jButtonColor1.setForeground(jButtonColor1);
    }

    public Color getStrokColor1() {
        return jButtonStrokColor1.getForeground();
    }

    public void setStrokColor1(Color jButtonStrokColor1) {
        this.jButtonStrokColor1.setForeground(jButtonStrokColor1);
    }

    public int getOpacity() {
        return jSliderOpac.getValue();
    }

    public void setOpacity(int jSlider1) {
        this.jSliderOpac.setValue(jSlider1);
    }

    public int getFrame() {
        return Integer.parseInt(jSpinnerFrame.getValue().toString());
    }

    public void setFrame(int f) {
        this.jSpinnerFrame.setValue(f);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonColor1;
    private javax.swing.JButton jButtonStrokColor1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanelState1;
    private javax.swing.JSlider jSliderOpac;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinnerAnglex;
    private javax.swing.JSpinner jSpinnerAngley;
    private javax.swing.JSpinner jSpinnerAnglez;
    private javax.swing.JSpinner jSpinnerFrame;
    private javax.swing.JSpinner jSpinnerScalex;
    private javax.swing.JSpinner jSpinnerScaley;
    private javax.swing.JSpinner jSpinnerScalez;
    private javax.swing.JSpinner jSpinnerx;
    private javax.swing.JSpinner jSpinnery;
    private javax.swing.JSpinner jSpinnerz;
    // End of variables declaration//GEN-END:variables

    private void updatetop() {
        if (newsha) {
            newsha = false;
            settingInterface.dimupdateSetting();
            newsha = true;
        }
    }

    public boolean isNewsha() {
        return newsha;
    }

    public void setNewsha(boolean newsha) {
        this.newsha = newsha;
    }

}
