/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JSO.Com.Main;

import java.awt.Color;
import javax.swing.JColorChooser;

/**
 *
 * @author shayan
 */
public class DimPanelColor extends javax.swing.JPanel {

    /**
     * Creates new form DimPanel
     */
    SettingInterface settingInterface;
    boolean newsha;

    public DimPanelColor(SettingInterface settingInterface) {
        this.settingInterface = settingInterface;
        initComponents();
        newsha = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelState1 = new javax.swing.JPanel();
        jButtonColor1 = new javax.swing.JButton();
        jButtonStrokColor1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerFrame = new javax.swing.JSpinner();
        jSliderOpac = new javax.swing.JSlider();
        jSpinner1 = new javax.swing.JSpinner();

        setLayout(new java.awt.GridLayout(1, 0));

        jPanelState1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonColor1.setText("Color");
        jButtonColor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonColor1ActionPerformed(evt);
            }
        });
        jPanelState1.add(jButtonColor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 75, -1));

        jButtonStrokColor1.setText("Strok Col");
        jButtonStrokColor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStrokColor1ActionPerformed(evt);
            }
        });
        jPanelState1.add(jButtonStrokColor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, -1, -1));

        jLabel2.setText("Opac");
        jPanelState1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 30, 20));

        jLabel4.setText("motion_f");
        jPanelState1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));

        jSpinnerFrame.setRequestFocusEnabled(false);
        jSpinnerFrame.setValue(15);
        jPanelState1.add(jSpinnerFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, 80, -1));

        jSliderOpac.setMaximum(255);
        jSliderOpac.setValue(255);
        jSliderOpac.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderOpacStateChanged(evt);
            }
        });
        jPanelState1.add(jSliderOpac, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 210, -1));
        jPanelState1.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 60, 20));

        add(jPanelState1);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonColor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonColor1ActionPerformed
        // TODO add your handling code here:
        Color c = JColorChooser.showDialog(null, "Choose a Color", jButtonColor1.getForeground());
        if (c != null) {
            jButtonColor1.setForeground(c);
            updatetop();
        }
    }//GEN-LAST:event_jButtonColor1ActionPerformed

    private void jButtonStrokColor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStrokColor1ActionPerformed
        // TODO add your handling code here:
        Color c = JColorChooser.showDialog(null, "Choose a Color", jButtonStrokColor1.getForeground());
        if (c != null) {
            jButtonStrokColor1.setForeground(c);
            updatetop();
        }
    }//GEN-LAST:event_jButtonStrokColor1ActionPerformed

    private void jSliderOpacStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderOpacStateChanged
        // TODO add your handling code here:
        updatetop();

    }//GEN-LAST:event_jSliderOpacStateChanged

    public Color getColor1() {
        return jButtonColor1.getForeground();
    }

    public void setColor(Color jButtonColor1) {
        this.jButtonColor1.setForeground(jButtonColor1);
    }

    public Color getStrokColor1() {
        return jButtonStrokColor1.getForeground();
    }

    public void setStrokColor1(Color jButtonStrokColor1) {
        this.jButtonStrokColor1.setForeground(jButtonStrokColor1);
    }

    public int getOpacity() {
        return jSliderOpac.getValue();
    }

    public void setOpacity(int jSlider1) {
        this.jSliderOpac.setValue(jSlider1);
    }

    public int getFrame() {
        return Integer.parseInt(jSpinnerFrame.getValue().toString());
    }

    public void setFrame(int f) {
        this.jSpinnerFrame.setValue(f);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonColor1;
    private javax.swing.JButton jButtonStrokColor1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanelState1;
    private javax.swing.JSlider jSliderOpac;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinnerFrame;
    // End of variables declaration//GEN-END:variables

    private void updatetop() {
        if (newsha) {
            newsha = false;
            settingInterface.dimupdateSetting();
            newsha = true;
        }
    }

    public boolean isNewsha() {
        return newsha;
    }

    public void setNewsha(boolean newsha) {
        this.newsha = newsha;
    }

}
